version: '3.7'


services:

  dspace8db:
    build:
      context: ../postgres
      dockerfile: Dockerfile
    image:
      ibict/postgresdspace8
    container_name: dspace8db
    ports:
      - "127.0.0.1:8787:5432"
    environment:
      - POSTGRES_PASSWORD=xxxxx #Postgres password
      - TZ=America/Sao_Paulo
    networks:
      - dspacenet
    volumes:
      - postgres_data:/var/lib/postgresql/data

  dspace8:
    container_name: dspace8
    environment:
      dspace__P__dir: /dspace
      solr__P__server: http://dspace8solr:8983/solr
      TZ: 'America/Sao_Paulo'
      proxies__P__trusted__P__ipranges: '172.23.0'
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - dspacenetwork
    ports:
      - published: 8080 #Port for tomcat
        target: 8080
    stdin_open: true
    tty: true
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      # Keep DSpace assetstore directory between reboots
      - ../../dspace-install-dir:/dspace
      - m2:/root/.m2
    entrypoint:
      - /bin/bash
      - '-c'
      - |
        /dspace/bin/dspace database migrate ignored
        ln -s /dspace/webapps/server /usr/local/tomcat/webapps/ || true
        catalina.sh run

  # DSpace Solr container
  dspace8solr:
    container_name: dspace8solr
    # Uses official Solr image at https://hub.docker.com/_/solr/
    image: solr:8.11-slim
    networks:
      dspacenetwork:
    ports:
      - "127.0.0.1:8983:8983"
    stdin_open: true
    tty: true
    working_dir: /var/solr/data
    volumes:
      - ../../dspace-install-dir/solr/authority/conf:/opt/solr/server/solr/configsets/authority/conf
      - ../../dspace-install-dir/solr/oai/conf/:/opt/solr/server/solr/configsets/oai/conf
      - ../../dspace-install-dir/solr/search/conf:/opt/solr/server/solr/configsets/search/conf
      - ../../dspace-install-dir/solr/statistics/conf:/opt/solr/server/solr/configsets/statistics/conf
      # Keep Solr data directory between reboots
    #      - solr_data:/var/solr/data
    # Initialize all DSpace Solr cores using the mounted local configsets (see above), then start Solr
    # * First, run precreate-core to create the core (if it doesn't yet exist). If exists already, this is a no-op
    # * Second, copy updated configs from mounted configsets to this core. If it already existed, this updates core
    #   to the latest configs. If it's a newly created core, this is a no-op.
    entrypoint:
      - /bin/bash
      - '-c'
      - |
        init-var-solr
        precreate-core authority /opt/solr/server/solr/configsets/authority
        cp -r -u /opt/solr/server/solr/configsets/authority/* authority
        precreate-core oai /opt/solr/server/solr/configsets/oai
        cp -r -u /opt/solr/server/solr/configsets/oai/* oai
        precreate-core search /opt/solr/server/solr/configsets/search
        cp -r -u /opt/solr/server/solr/configsets/search/* search
        precreate-core statistics /opt/solr/server/solr/configsets/statistics
        cp -r -u /opt/solr/server/solr/configsets/statistics/* statistics
        exec solr -f


volumes:
  solr_data:
  m2:
  postgres_data:


networks:
  dspacenetwork:
    name: dspacenetwork
    driver: bridge